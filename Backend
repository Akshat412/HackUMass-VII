const express = require('express');
const admin = require('firebase-admin');
const defaultValues = require("./defaultValues");


const app = express();

const { users } = defaultValues.users;

var refreshToken; // Get refresh token from OAuth2 flow

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
  databaseURL: "https://hackumass-3445e.firebaseio.com"
});

<script src="https://www.gstatic.com/firebasejs/7.2.1/firebase-app.js"></script>

<script src="https://www.gstatic.com/firebasejs/7.2.1/firebase-analytics.js"></script>

<script>
  // Web app's Firebase configuration
  var firebaseConfig = {
    apiKey: "AIzaSyBQOOe0dxHaZx_OLe3VEuAPvCOgjivoblc",
    authDomain: "hackumass-3445e.firebaseapp.com",
    databaseURL: "https://hackumass-3445e.firebaseio.com",
    projectId: "hackumass-3445e",
    storageBucket: "hackumass-3445e.appspot.com",
    messagingSenderId: "972457982422",
    appId: "1:972457982422:web:dd7f69d9f548ee509d0c77",
    measurementId: "G-Y6QHK2KDVV"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  firebase.analytics();
</script>

  // Get a reference to the database service
  var database = firebase.database();
 
  database.once("open", () => {
    console.log("connected to the database");
  });
  
  function writeUserData(userId, name) {
    firebase.database().ref('/users/' + userId).set({
      name: name
    });
  }

  function readDataOnce(userId, name) {
    var userId = firebase.auth().currentUser.uid;
        return firebase.database().ref('/users/' + userId).once('value').then(function(snapshot) {
        var username = (snapshot.val() && snapshot.val().name) || 'Anonymous';
    });
}

const PORT = process.env.PORT || 3000;

app.listen(PORT, () => {
	console.log(`server started at http://localhost:${ PORT }`)
});
